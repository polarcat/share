#!/bin/sh

ifs_=$IFS

#right=''
#arrow=' '
#play=''
#gt=''
gt='>'
play=$gt

setpath()
{
	case $PATH in
	*$1*) ;;
	*) export PATH=$PATH:$1;;
	esac
}

branch_=''
branch() { eval branch_=\$$#; }

githead_=''
githead()
{
	local n=$#
	local path=''
	local head=''

	IFS=$ifs_
	githead_=''

	if [ -f .git/HEAD ]; then
		githead_=".git/HEAD"
		return
        elif [ -f .git ]; then
		read dir module < .git
		githead_="$module/HEAD"
		return
	fi

	while [ $n -gt 0 ]; do
		path='../'$path
		head=${path}.git/HEAD
		n=$((n - 1))

		if [ ! -f $head ]; then
			continue
		fi

		githead_=$head
		return
	done
}

gitps()
{
	IFS='/'; githead $PWD; IFS=$ifs_

	if [ -z "$githead_" ]; then
		printf ""
		return
	fi

	branch_=''

	while read line; do
		IFS='/'; branch $line; IFS=$ifs_
	done < $githead_

	if [ -z "$branch_" ]; then
		printf ""
	else
#		if [ "$TERM" = "linux" ]; then
#			printf ":\033[1;36m$branch_\033[0m"
		if [ $# -eq 1 ]; then
			printf "[$branch_] "
		else
			box_color="\[\e[0m\]\[\e[1;32m\]"
			git_color="\[\e[0m\]\[\e[0;94m\]"
			printf "${box_color}■${git_color} $branch_"
		fi
	fi
}

gitps0() { git describe --contains --all HEAD 2>/dev/null; }

devps()
{
	if [ -z "$ANDROID_SERIAL" ]; then
		return
	fi
	if [ "$TERM" = "linux" ]; then
		printf "$ANDROID_SERIAL "
	else
		printf "  $ANDROID_SERIAL "
	fi
}

not_chroot()
{
	ls -id / | while read inode path; do
		if [ "$inode" = "2" ]; then
			return 0
		else
			return 1
		fi
	done
}

xtermps()
{
	if not_chroot; then
		chroot=''
	else
		chroot="ch ■ "
	fi

	if [ -n "$TMUX" ]; then
		tmux="tx ■ "
	else
		tmux=''
	fi

	box_color="\[\e[0m\]\[\e[1;36m\]"
	path_color="\[\e[0m\]\[\e[1;94m\]"
	led_color="\[\e[0m\]\[\e[0;90m\]"
	line0="$user_color${chroot}${tmux}\u ${play_color}$play"
	line1="$host_color\H ${box_color}■ $path_color\w "
	line2="${git_color}$(gitps)"
	PS1="$line1$line2\n$line0 \[\e[0m\]"
}

cd() { command cd "$@" && xtermps; }
git() { command git "$@" && xtermps; }

setpath $HOME/bin

export EDITOR=vim

[ -z "$PS1" ] && return # If not running interactively, don't do anything

alias ls='ls --color'
alias grep='grep --color'

if [ "$USER" = "root" ]; then
	user_color="\[\e[0m\]\[\e[1;93m\]"
	play_color="\[\e[0m\]\[\e[0;93m\]"
	host_color="\[\e[0m\]\[\e[1;90m\]"
else
	user_color="\[\e[0m\]\[\e[1;94m\]"
	play_color="\[\e[0m\]\[\e[1;94m\]"
	host_color="\[\e[0m\]\[\e[1;90m\]"
fi

if [ "$TERM" = "linux" ]; then
#	PS1='\H@\u \w$(gitps) > '
	gt='>'
fi

xtermps

if [ -f ~/.sdkrc ]; then
	source ~/.sdkrc
fi

export PATH

# Enable programmable sdb completion features.
#source ~/.sdb/.sdb-completion.bash
#source ~/.bashrc_sdk
#source ~/.bashrc_jdk
#setpath "/usr/lib/git-core"
#setpath "/usr/games/bin"

# FIXME: this fixes sefault in i965_dri.so

export MESA_GLSL_CACHE_DISABLE=1
export XTERM_TTY=$(tty)
export FONTCONFIG_PATH=/etc/fonts
export FONTCONFIG_FILE=/etc/fonts/fonts.conf
